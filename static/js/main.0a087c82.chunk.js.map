{"version":3,"sources":["Chunk.ts","Map.tsx","reportWebVitals.js","index.js"],"names":["Chunk","unlocked","Map","useState","width","height","chunks","y","push","x","initChunks","minScale","limitToBounds","id","cellSpacing","cellPadding","map","row","chunk","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oMAAqBA,E,sCACZC,UAAW,G,OCkBL,SAASC,IACtB,IAD4B,EAIAC,mBAlB9B,SAAoBC,EAAeC,GAGjC,IAFA,IAAMC,EAAoB,GAEjBC,EAAI,EAAGA,EAAIF,EAAQE,IAAK,CAC/BD,EAAOE,KAAK,IAEZ,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAOK,IACzBH,EAAOC,GAAGC,KAAK,IAAIR,GAIvB,OAAOM,EAO8BI,CAHvB,GACC,KAFa,mBAIrBJ,EAJqB,UAM5B,OACE,cAAC,IAAD,CAAkBK,SAAU,GAAKC,eAAe,EAAhD,SACE,cAAC,IAAD,UACE,uBAAOC,GAAG,MAAMC,YAAa,EAAGC,YAAa,EAA7C,SACE,gCACGT,EAAOU,KAAI,SAACC,EAAKV,GAAN,OACV,6BACGU,EAAID,KAAI,SAACE,EAAOT,GAAR,OACP,sCAAkBA,EAAlB,YAAuBF,QAF3B,cAAgBA,eC/B9B,IAYeY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC5B,EAAD,MAEF6B,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0a087c82.chunk.js","sourcesContent":["export default class Chunk {\r\n  public unlocked = false;\r\n}\r\n","import { useState } from 'react';\r\nimport { TransformWrapper, TransformComponent } from 'react-zoom-pan-pinch';\r\n\r\nimport Chunk from './Chunk';\r\n\r\nfunction initChunks(width: number, height: number) {\r\n  const chunks: Chunk[][] = [];\r\n\r\n  for (let y = 0; y < height; y++) {\r\n    chunks.push([]);\r\n\r\n    for (let x = 0; x < width; x++) {\r\n      chunks[y].push(new Chunk());\r\n    }\r\n  }\r\n\r\n  return chunks;\r\n}\r\n\r\nexport default function Map() {\r\n  const width = 43;\r\n  const height = 25;\r\n\r\n  const [chunks, setChunks] = useState(initChunks(width, height));\r\n\r\n  return (\r\n    <TransformWrapper minScale={0.1} limitToBounds={false}>\r\n      <TransformComponent>\r\n        <table id=\"map\" cellSpacing={0} cellPadding={0}>\r\n          <tbody>\r\n            {chunks.map((row, y) => (\r\n              <tr key={`row-${y}`}>\r\n                {row.map((chunk, x) => (\r\n                  <td key={`chunk-${x}-${y}`}></td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </TransformComponent>\r\n    </TransformWrapper>\r\n  );\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport Map from './Map';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport './Styles.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Map />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}